# load zit
# TODO: Escape does sudo / thefuck
# TODO: zsh-navigation-tools?
export ZIT_MODULES_PATH="${HOME}/.zit.d"
if [[ ! -d "${ZIT_MODULES_PATH}/zit" ]]; then
  git clone "https://github.com/m45t3r/zit" "${ZIT_MODULES_PATH}/zit"
fi
source "${ZIT_MODULES_PATH}/zit/zit.zsh"

# let zit manage zit
zit-install "https://github.com/m45t3r/zit" "zit"

# zim
autoload -U is-at-least
if is-at-least 5.2; then
  export ZIM_HOME="${ZIT_MODULES_PATH}/zim"
  zit-il "https://github.com/Eriner/zim" "zim" "init.zsh"
elif is-at-least 4.3.9; then
  true
  # The plan was to use antigen as a poor man's zim, but the setup seems more
  # involved than I'd like.

  # export ADOTDIR="${ZIT_MODULES_PATH}/antigen"
  # zit-il "https://github.com/zsh-users/antigen" "antigen" "antigen.zsh"
  # antigen init "${HOME}/.antigenrc"
fi

## Fallback theme & plugins
# WARNING: All plugins that conflict with ZIM built-ins should be here!
if [ -z "$ZIM_HOME" ]; then
  zit-il "https://github.com/dotcode/multi-shell-repo-prompt" \
    "theme-multi" "prompt.sh"
  zit-il "https://github.com/zdharma/fast-syntax-highlighting" \
    "fast-syntax-highlighting" "fast-syntax-highlighting.plugin.zsh"
  zit-il "https://github.com/zsh-users/zsh-history-substring-search" \
    "history-substring-search" "zsh-history-substring-search.zsh"

  # Without zim, still need a history search
  autoload -U up-line-or-beginning-search
  autoload -U down-line-or-beginning-search
  zle -N up-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey '^[OA' up-line-or-beginning-search # Up
  bindkey '^[OB' down-line-or-beginning-search # Down
  # ...and for GNOME Terminal:
  bindkey '^[[A' up-line-or-beginning-search # Up
  bindkey '^[[B' down-line-or-beginning-search # Down
  # Ctrl + left/right arrow
  bindkey '^[[1;5C' forward-word
  bindkey '^[[1;5D' backward-word
  # Ctrl + up/down arrow
  bindkey '^[[1;5A' history-substring-search-up
  bindkey '^[[1;5B' history-substring-search-down
fi

# misc
zit-il "https://github.com/willghatch/zsh-saneopt" \
  "sane-defaults" "saneopt.plugin.zsh"
# zit-il "https://github.com/thetic/extract" "extract" "extract.plugin.zsh"

zit-il "https://github.com/zlsun/solarized-man" "solarized-man" "solarized-man.plugin.zsh"
zit-il "https://github.com/hcgraf/zsh-sudo" "sudo"  "sudo.plugin.zsh"
# zit-il "https://github.com/mdumitru/last-working-dir" "last-working-dir" "last-working-dir.zsh"
# zit-il "https://github.com/peterhurford/up.zsh" "up" "up.plugin.zsh"
zit-il "https://github.com/oz/safe-paste" "safe-paste" "safe-paste.plugin.zsh"
# zit-il "https://github.com/djui/alias-tips" \
#   "alias-tips" "alias-tips.plugin.zsh"
# zit-il "https://github.com/Tarrasch/zsh-autoenv" \
#   "zsh-autoenv" "autoenv.zsh"
# zit-il "https://github.com/desyncr/auto-ls" \
#   "auto-ls" "auto-ls.zsh"

auto-ls-customfunction () {
  ls --color=always
  if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == true ]]; then
    git status -s
  fi
}
AUTO_LS_COMMANDS=(customfunction)

zit-il  "https://github.com/zsh-users/zsh-completions" \
  "completions" "zsh-completions.plugin.zsh"
# zit-il "https://github.com/hchbaw/auto-fu.zsh" "auto-fu" "auto-fu.zsh"
# Invoked in zshrc later:
# autoload -U compinit && compinit

# Potentially super-useful - investigate further?
# zit-il "https://github.com/psprint/zsh-editing-workbench" \
#   "zsh-editing-workbench" "zsh-editing-workbench.plugin.zsh"

# forgit_log=fglo
# forgit_diff=fgd
# forgit_add=fga
# forgit_restore=fgcf
# forgit_clean=fgclean
# zit-il "https://github.com/wfxr/forgit" "forgit" "forgit.plugin.zsh"

# zsh-async is a prereq for fuzzy search
# zit-il "https://github.com/mafredri/zsh-async" \
#   "zsh-async" "async.zsh"
# zit-il "https://github.com/seletskiy/zsh-fuzzy-search-and-edit" \
#   "zsh-fuzzy-search" "plugin.zsh"
#
# Courtesy of zsh-fuzzy-search-and-edit
# bindkey '^P' fuzzy-search-and-edit

# script to compile ZSH files
# should be called last
zit-lo "zit" "extras/compile-zsh-files.zsh"

# vim: ft=zsh

# Tmux setup, taken from all over the web and organized.
# Collector: Simon Podhajsky. (Credit given less often than deserved.)
#
# NOTE:  OSX struggles with Meta keys; rebind Option key to Esc in iTerm2
#
# Table of contents: Options, Bindings, Plugins

### Option setup
## Basics
# Indexing of windows and panes
set -g base-index 1
set -g pane-base-index 1
set-option -g renumber-windows on

set -sg escape-time 0 # Don't wait after Esc press
# set-option -g history-limit 10000 # Set by tmux-sensible

## Terminal setup
# set -g default-terminal "screen-256color" # Set by tmux-sensible

## Colors
set-window-option -g clock-mode-colour white
setw -g mode-bg white
set-option -g pane-active-border-fg white
set-option -g pane-border-fg white

## Window settings
# setw -g aggressive-resize on # Done by tmux-sensible
set-option -g allow-rename on
set-option -g automatic-rename off

## Notification settings
set-window-option -g monitor-activity on
set-option -g visual-activity off
set-option -g visual-bell on

## Movement keys
# set-option -g status-keys emacs # Set by tmux-sensible
set-window-option -g xterm-keys on # for vim - use number key sequences
set-window-option -g mode-keys vi # vi key - movement in copy/choice modes

## Mouse settings
set-option -g mouse on

## Status bar
set-option -g status-justify left
set-option -g status-bg black
set-option -g status-fg cyan
set-option -g status-interval 0
set-option -g status-left-length 60
set-option -g status-right-length 80
set-option -g status-left '#[fg=blue,bold] ###S.#[fg=yellow]#I.#[fg=cyan]#P #[fg=white]| '
set-option -g status-right '#[fg=cyan]#T #[fg=white]| %m/%d, %R#[default] #[fg=white]| #{online_status} | #{battery_percentage} #{battery_remain}'

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#T :: #S'

set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg white
#setw -g window-status-current-attr reverse # NOTE: might not exist

#### Bindings
### Reset prefix
unbind C-b # default prefix
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions
# TODO: Test C-Space as prefix, C-Space Space to enter copy-mode

set -g assume-paste-time 0

### Unbindings
unbind [ # copy mode bound to escape key
unbind j
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
unbind c

### Copy mode
bind Escape copy-mode
bind p paste-buffer
bind -T copy-mode-vi v      send-keys -X begin-selection
bind -T copy-mode-vi y      send-keys -X copy-selection
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi C-v    send-keys -X rectangle-toggle
# bind -T edit-mode-vi Up     send-keys -X history-up
# bind -T edit-mode-vi Down   send-keys -X history-down

### Pane/window manipulation
bind A command-prompt "rename-window %%"

# New pane split
# TODO: Maybe done by tmux-pane-control?
bind-key c new-window -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}" # split pane horizontally # set in tmux-pain-control
bind-key \ split-window -h -c "#{pane_current_path}" # split pane vertically
bind-key _ split-window -v -c "#{pane_current_path}" -l 8 # open a smaller horizontal split

bind-key Space list-panes
bind-key Enter break-pane

# Join panes
bind-key -r M-m join-pane -h -t:- # Send current pane to previous window, vertical split
bind-key -r M-n join-pane -v -t:- # Send current pane to previous window, horizontal split

bind-key M-j command-prompt -p "join pane from:"  "join-pane -h -s '%%'"
bind-key M-s command-prompt -p "send pane to:"  "join-pane -h -t '%%'"

# Resizing
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

### Navigation
## Exit (respond also to prefix + ^D)
bind-key ^D detach-client

## Panes
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

## Windows
bind-key -n S-left previous-window
# tmux-sensible also adds C-p

bind-key -n S-right next-window
# tmux-sensible also adds C-n

bind-key C-a last-window # C-a C-a for last active window
# tmux-sensible also adds prefix + a

# Cycle through windows
bind -r C-j select-window -t :-
bind -r C-k select-window -t :+

## Sessions (default: ( and ) )
bind -r ( switch-client -p
bind -r ) switch-client -n

### Layouts
bind M-v select-layout "even-vertical"
bind M-h select-layout "even-horizontal"
bind M-r rotate-window

### Tricks
# Reload tmux conf
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."
# tmux-sensible also adds prefix + R

# Clean pane screen (as per `screen`)
bind C-l send-keys 'C-l'

## OSX: copy-paste fix & default shell fix (setting last to override)
# NOTE: `pane` does not exist, but serves as name of newly created pane
# NOTE: (supposedly) set by tmux-sensible

set -g default-shell $SHELL
is_osx='test "$(uname)" = "Darwin"'
if-shell '$is_osx' 'set -g default-command "reattach-to-user-namespace -l ${SHELL}"'
if-shell '$is_osx' 'bind-key -t copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

### Plugins and TPM (hit prefix + I to install)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-pain-control'

#set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'
set -g @resurrect-processes 'mutt vim tail'
set -g @resurrect-save-bash-history 'on'

run '~/.tmux/plugins/tpm/tpm'

# Bonus: Use prefix + (movement key) to move between vim splits
# (here to run after tmux-pain-control)
bind-key h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"


